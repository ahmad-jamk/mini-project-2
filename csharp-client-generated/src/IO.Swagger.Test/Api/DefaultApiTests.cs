/* 
 * Doctor Appointment API
 *
 * API for managing Doctor Appointment
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        /// <summary>
        /// Test DoctorAppointmentAppointmentIdDelete
        /// </summary>
        [Test]
        public void DoctorAppointmentAppointmentIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? appointmentId = null;
            //instance.DoctorAppointmentAppointmentIdDelete(appointmentId);
            
        }
        /// <summary>
        /// Test DoctorAppointmentAppointmentIdGet
        /// </summary>
        [Test]
        public void DoctorAppointmentAppointmentIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? appointmentId = null;
            //var response = instance.DoctorAppointmentAppointmentIdGet(appointmentId);
            //Assert.IsInstanceOf<DoctorAppointment> (response, "response is DoctorAppointment");
        }
        /// <summary>
        /// Test DoctorAppointmentAppointmentIdPut
        /// </summary>
        [Test]
        public void DoctorAppointmentAppointmentIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DoctorAppointmentInput body = null;
            //int? appointmentId = null;
            //instance.DoctorAppointmentAppointmentIdPut(body, appointmentId);
            
        }
        /// <summary>
        /// Test DoctorAppointmentDelete
        /// </summary>
        [Test]
        public void DoctorAppointmentDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DoctorAppointmentDelete();
            
        }
        /// <summary>
        /// Test DoctorAppointmentGet
        /// </summary>
        [Test]
        public void DoctorAppointmentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DoctorAppointmentGet();
            //Assert.IsInstanceOf<List<DoctorAppointmentList>> (response, "response is List<DoctorAppointmentList>");
        }
        /// <summary>
        /// Test DoctorAppointmentPost
        /// </summary>
        [Test]
        public void DoctorAppointmentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DoctorAppointmentInput body = null;
            //instance.DoctorAppointmentPost(body);
            
        }
        /// <summary>
        /// Test DoctorAppointmentPut
        /// </summary>
        [Test]
        public void DoctorAppointmentPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<DoctorAppointment> body = null;
            //instance.DoctorAppointmentPut(body);
            
        }
        /// <summary>
        /// Test DoctorAppointmentSearchGet
        /// </summary>
        [Test]
        public void DoctorAppointmentSearchGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string doctor = null;
            //string patient = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //var response = instance.DoctorAppointmentSearchGet(id, doctor, patient, startDate, endDate);
            //Assert.IsInstanceOf<List<DoctorAppointment>> (response, "response is List<DoctorAppointment>");
        }
    }

}
